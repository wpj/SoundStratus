angular.module("cirrusSounds",["app.controllers","app.directives","app.filters","app.services","ui.router","satellizer","ngAnimate"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("home",{url:"/",templateUrl:"home.html"}).state("trending",{url:"/popular",templateUrl:"trending.html",controller:"NavCtrl",onEnter:["$state","$auth",function(t,e){e.isAuthenticated()||t.go("home")}]}).state("trending.today",{url:"/today",templateUrl:"trending-list.html",controller:"TrendingCtrl",resolve:{timeframe:function(){return{time:"day"}}}}).state("trending.week",{url:"/this-week",templateUrl:"trending-list.html",controller:"TrendingCtrl",resolve:{timeframe:function(){return{time:"week"}}}}).state("trending.month",{url:"/this-month",templateUrl:"trending-list.html",controller:"TrendingCtrl",resolve:{timeframe:function(){return{time:"month"}}}}).state("trending.allTime",{url:"/all-time",templateUrl:"trending-list.html",controller:"TrendingCtrl",resolve:{timeframe:function(){return{time:"allTime"}}}}),e.otherwise("/")}]).config(["$authProvider","clientId",function(t,e){t.oauth2({name:"soundcloud",url:"/auth/soundcloud",clientId:e,redirectUri:window.location.origin,authorizationEndpoint:"https://soundcloud.com/connect",optionalUrlParams:["display"],display:"popup"})}]).run(["$rootScope",function(t){t.messages={},t.$on("$stateChangeSuccess",function(){t.messages={}})}]),angular.module("app.controllers",[]).controller("MainCtrl",["$rootScope","$scope","$http","$auth","Account","$state",function(t,e,n,r,o,a){e.authenticating=!1,e.clearMessages=function(){t.messages={}},e.login=function(){return e.authenticating=!0,r.authenticate("soundcloud").then(function(){e.getProfile().then(function(){a.go("trending"),e.authenticating=!1})}).catch(function(n){e.authenticating=!1,n&&(t.messages.error=n.data.errors)})},e.logout=function(){return r.logout().then(function(){e.user=null})},e.isAuthenticated=function(){return r.isAuthenticated()},e.getProfile=function(){return o.get().then(function(t){return e.user=t.data,e.user}).catch(function(e){e&&(t.messages.error=e.data.errors)})}}]).controller("NavCtrl",["$rootScope","$scope","$state","Soundcloud",function(t,e,n){n.go("trending.week"),e.activeTab=function(t){return t===n.current.name},e.$on("data:notFound",function(){t.messages.noDataFound=!0}),e.$on("data:follow",function(){t.messages.follow=!0}),e.$on("data:error",function(e,n){console.log(n),t.messages.error=n.data.errors})}]).controller("TrendingCtrl",["$scope","$q","Soundcloud","musicCache","timeframe","$state",function(t,e,n,r,o){t.showLoading=!1,r.cached?e.when(n.filterByTime(r.get(),o.time)).then(function(e){t.showLoading=!1,t.songs=e,e.length?e.length<10&&t.$emit("data:follow"):t.$emit("data:notFound")}).catch(function(e){t.showLoading=!1,e&&t.$emit("data:error",e)}):(t.showLoading=!0,t.getProfile().then(function(a){n.parseUser(a.uid).then(function(a){t.showLoading=!1,r.set(a),e.when(n.filterByTime(a,o.time)).then(function(e){t.songs=e,e.length?e.length<10&&t.$emit("data:follow"):t.$emit("data:notFound")}).catch(function(e){e&&t.$emit("data:error",e)})}).catch(function(e){e&&t.$emit("data:error",e)})}))}]),function(){angular.module("app.directives",[]).directive("musicPlayer",["$http","soundcloudUrl","clientId",function(t,e,n){return{restrict:"A",templateUrl:"music-player.html",scope:{url:"@",title:"@",username:"@",artistUrl:"@"},link:function(t,r,o){var a,i,u;return a=document.createElement("audio"),i=0,u=""+e+"tracks/"+o.musicPlayer+"/stream?client_id="+n,t.playing=!1,t.currentTime=0,t.duration=0,t.loadingSong=!1,t.play=function(){return t.loadingSong=!0,a.src=u,a.play(),a.addEventListener("canplay",function(){return t.loadingSong=!1,a.currentTime||(a.currentTime=i),t.playing=!0})},t.pause=function(){return a.pause(),t.loadingSong=!1,t.playing=!1},t.seek=function(t){var e,n,r,o;return(n=t.offsetX||t.layerX-t.target.offsetLeft)?(r=n/t.target.offsetWidth,e=a.duration,o=e*r,a.currentTime=parseInt(o,10)):void 0},a.addEventListener("pause",function(){return i=a.currentTime},!1),a.addEventListener("timeupdate",function(){return t.$apply(function(){return t.currentTime=a.currentTime,t.duration=a.duration})},!1),a.addEventListener("ended",function(){return i=0,t.$apply(function(){return t.playing=!1})},!1)}}}])}.call(this),angular.module("app.filters",[]),angular.module("app.services",[]).constant("clientId","863060121a2ffb5d258e7a793da0546b").constant("soundcloudUrl","//api.soundcloud.com/").factory("Soundcloud",["$http","$q","clientId","soundcloudUrl",function(t,e,n,r){var o={client_id:n},a=function(t){return i(t).then(function(t){return u(t)}).then(function(t){return l(_.flatten(t))})},i=function(e){return t.get(r+"users/"+e+"/followings.json",{params:o}).then(function(t){return t.data})},u=function(t){return e.all(_.map(t,function(t){return c(t.id)}))},c=function(n){return e.all([t.get(r+"users/"+n+"/favorites.json",{params:o}),t.get(r+"users/"+n+"/tracks.json",{params:o})])},l=function(t){return _(t).map(function(t){return t.data?t.data:void 0}).flatten().reject(function(t){return!t.playback_count}).uniq("id")},s=function(t,e){var n=new Date;return e="day"===e?n.setDate(n.getDate()-1):"week"===e?n.setDate(n.getDate()-7):"month"===e?n.setMonth(n.getMonth()-1):null,t.reject(function(t){return e?Date.parse(t.created_at)<e:void 0}).sortBy("playback_count").reverse().first(10).value()};return{parseUser:a,filterByTime:s}}]).factory("Account",["$http",function(t){return{get:function(){return t.get("/api/me")}}}]).factory("musicCache",function(){var t=[];return{get:function(){return t},set:function(e){t=e,this.cached=!0},cached:!1}});
//# sourceMappingURL=data:application/json;base64,