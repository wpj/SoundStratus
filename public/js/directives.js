(function() {
  angular.module('app.directives', []).directive('musicPlayer', [
    '$http', 'soundcloudUrl', 'clientId', function($http, soundcloudUrl, clientId) {
      return {
        restrict: 'A',
        templateUrl: 'music-player.html',
        scope: {
          url: '@',
          title: '@',
          username: '@',
          artistUrl: '@'
        },
        link: function(scope, elem, attrs) {
          var audio, currentTime, src;
          audio = document.createElement('audio');
          currentTime = 0;
          src = "" + soundcloudUrl + "tracks/" + attrs.musicPlayer + "/stream?client_id=" + clientId;
          scope.playing = false;
          scope.currentTime = 0;
          scope.duration = 0;
          scope.loadingSong = false;
          scope.play = function() {
            scope.loadingSong = true;
            audio.src = src;
            audio.play();
            return audio.addEventListener('canplay', function() {
              scope.loadingSong = false;
              audio.currentTime || (audio.currentTime = currentTime);
              return scope.playing = true;
            });
          };
          scope.pause = function() {
            audio.pause();
            scope.loadingSong = false;
            return scope.playing = false;
          };
          scope.seek = function(e) {
            var duration, offset, percent, seekTo;
            if (offset = e.offsetX || e.layerX - e.target.offsetLeft) {
              percent = offset / e.target.offsetWidth;
              duration = audio.duration;
              seekTo = duration * percent;
              return audio.currentTime = parseInt(seekTo, 10);
            }
          };
          audio.addEventListener('pause', function() {
            return currentTime = audio.currentTime;
          }, false);
          audio.addEventListener('timeupdate', function() {
            return scope.$apply(function() {
              scope.currentTime = audio.currentTime;
              return scope.duration = audio.duration;
            });
          }, false);
          return audio.addEventListener('ended', function() {
            currentTime = 0;
            return scope.$apply(function() {
              return scope.playing = false;
            });
          }, false);
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,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U0FBQSxHQUFBO21CQUM5QixXQUFBLEdBQWMsS0FBSyxDQUFDLFlBRFU7VUFBQSxDQUFoQyxFQUVFLEtBRkYsQ0EvQkEsQ0FBQTtBQUFBLFVBbUNBLEtBQUssQ0FBQyxnQkFBTixDQUF1QixZQUF2QixFQUFxQyxTQUFBLEdBQUE7bUJBQ25DLEtBQUssQ0FBQyxNQUFOLENBQWEsU0FBQSxHQUFBO0FBQ1gsY0FBQSxLQUFLLENBQUMsV0FBTixHQUFvQixLQUFLLENBQUMsV0FBMUIsQ0FBQTtxQkFDQSxLQUFLLENBQUMsUUFBTixHQUFpQixLQUFLLENBQUMsU0FGWjtZQUFBLENBQWIsRUFEbUM7VUFBQSxDQUFyQyxFQUlFLEtBSkYsQ0FuQ0EsQ0FBQTtpQkF5Q0EsS0FBSyxDQUFDLGdCQUFOLENBQXVCLE9BQXZCLEVBQWdDLFNBQUEsR0FBQTtBQUM5QixZQUFBLFdBQUEsR0FBYyxDQUFkLENBQUE7bUJBQ0EsS0FBSyxDQUFDLE1BQU4sQ0FBYSxTQUFBLEdBQUE7cUJBQ1gsS0FBSyxDQUFDLE9BQU4sR0FBZ0IsTUFETDtZQUFBLENBQWIsRUFGOEI7VUFBQSxDQUFoQyxFQUlFLEtBSkYsRUEzQ0k7UUFBQSxDQVBOO1FBRCtEO0lBQUEsQ0FBdkM7R0FGMUIsQ0FBQSxDQUFBO0FBQUEiLCJmaWxlIjoiZGlyZWN0aXZlcy5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAuZGlyZWN0aXZlcycsIFtdKVxuXG4uZGlyZWN0aXZlICdtdXNpY1BsYXllcicsIFsnJGh0dHAnLCAnc291bmRjbG91ZFVybCcsICdjbGllbnRJZCcsICgkaHR0cCwgc291bmRjbG91ZFVybCwgY2xpZW50SWQpIC0+XG4gIHJlc3RyaWN0OiAnQSdcbiAgdGVtcGxhdGVVcmw6ICdtdXNpYy1wbGF5ZXIuaHRtbCdcbiAgc2NvcGU6XG4gICAgdXJsOiAnQCdcbiAgICB0aXRsZTogJ0AnXG4gICAgdXNlcm5hbWU6ICdAJ1xuICAgIGFydGlzdFVybDogJ0AnXG4gIGxpbms6IChzY29wZSwgZWxlbSwgYXR0cnMpIC0+XG5cbiAgICBhdWRpbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgJ2F1ZGlvJ1xuICAgIGN1cnJlbnRUaW1lID0gMFxuICAgIHNyYyA9IFwiI3tzb3VuZGNsb3VkVXJsfXRyYWNrcy8je2F0dHJzLm11c2ljUGxheWVyfS9zdHJlYW0/Y2xpZW50X2lkPSN7Y2xpZW50SWR9XCJcblxuICAgIHNjb3BlLnBsYXlpbmcgPSBmYWxzZVxuICAgIHNjb3BlLmN1cnJlbnRUaW1lID0gMFxuICAgIHNjb3BlLmR1cmF0aW9uID0gMFxuICAgIHNjb3BlLmxvYWRpbmdTb25nID0gZmFsc2VcblxuICAgIHNjb3BlLnBsYXkgPSAtPlxuICAgICAgc2NvcGUubG9hZGluZ1NvbmcgPSB0cnVlXG4gICAgICBhdWRpby5zcmMgPSBzcmNcbiAgICAgIGF1ZGlvLnBsYXkoKVxuICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lciAnY2FucGxheScsIC0+XG4gICAgICAgIHNjb3BlLmxvYWRpbmdTb25nID0gZmFsc2VcbiAgICAgICAgYXVkaW8uY3VycmVudFRpbWUgfHw9IGN1cnJlbnRUaW1lXG4gICAgICAgIHNjb3BlLnBsYXlpbmcgPSB0cnVlXG5cbiAgICBzY29wZS5wYXVzZSA9IC0+XG4gICAgICBhdWRpby5wYXVzZSgpXG4gICAgICBzY29wZS5sb2FkaW5nU29uZyA9IGZhbHNlXG4gICAgICBzY29wZS5wbGF5aW5nID0gZmFsc2VcblxuICAgIHNjb3BlLnNlZWsgPSAoZSkgLT5cbiAgICAgICMgcmV0dXJuIGZhbHNlIHVubGVzcyBhdWRpby5yZWFkeVN0YXRlXG4gICAgICBpZiBvZmZzZXQgPSBlLm9mZnNldFggfHwgZS5sYXllclggLSBlLnRhcmdldC5vZmZzZXRMZWZ0XG4gICAgICAgIHBlcmNlbnQgPSBvZmZzZXQgLyBlLnRhcmdldC5vZmZzZXRXaWR0aFxuICAgICAgICBkdXJhdGlvbiA9IGF1ZGlvLmR1cmF0aW9uXG4gICAgICAgIHNlZWtUbyA9IGR1cmF0aW9uICogcGVyY2VudFxuICAgICAgICBhdWRpby5jdXJyZW50VGltZSA9IHBhcnNlSW50KHNlZWtUbywgMTApXG5cbiAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyICdwYXVzZScsIC0+XG4gICAgICBjdXJyZW50VGltZSA9IGF1ZGlvLmN1cnJlbnRUaW1lXG4gICAgLCBmYWxzZVxuXG4gICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lciAndGltZXVwZGF0ZScsIC0+XG4gICAgICBzY29wZS4kYXBwbHkgLT5cbiAgICAgICAgc2NvcGUuY3VycmVudFRpbWUgPSBhdWRpby5jdXJyZW50VGltZVxuICAgICAgICBzY29wZS5kdXJhdGlvbiA9IGF1ZGlvLmR1cmF0aW9uXG4gICAgLCBmYWxzZVxuXG4gICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lciAnZW5kZWQnLCAtPlxuICAgICAgY3VycmVudFRpbWUgPSAwXG4gICAgICBzY29wZS4kYXBwbHkgLT5cbiAgICAgICAgc2NvcGUucGxheWluZyA9IGZhbHNlXG4gICAgLCBmYWxzZVxuXVxuIl19